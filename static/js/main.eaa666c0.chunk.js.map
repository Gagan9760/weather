{"version":3,"sources":["Nav.js","App.js","index.js"],"names":["Nav","dark","setDark","AppBar","color","position","style","top","Grid","container","item","xs","display","placeItems","Toolbar","Typography","variant","align","Switch","checked","onChange","App","useState","theme","createTheme","palette","type","value","setValue","disdata","setData","getValues","a","fetch","response","status","json","data","temp","main","min","temp_min","max","temp_max","hum","humidity","ThemeProvider","Paper","className","sm","elevation","TextField","label","e","target","Button","margin","onClick","spacing","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eaa666c0.chunk.js","sourcesContent":["import React from 'react'\r\nimport { AppBar, Typography, Toolbar, Grid } from '@material-ui/core'\r\nimport CloudOutlinedIcon from '@material-ui/icons/CloudOutlined';\r\nimport Switch from '@material-ui/core/Switch';\r\n\r\nconst Nav = ({dark,setDark}) => {\r\n    return (\r\n        <div>\r\n\r\n            <AppBar color=\"secondary\" position=\"static\" style={{ top: 0 }}>\r\n                \r\n                <Grid container >\r\n                    \r\n                    <Grid item xs={12} style={{\r\n                        display:\"grid\",\r\n                        placeItems:\"center\"\r\n                    }} >\r\n                    <Toolbar>\r\n                        <Typography variant=\"h5\" align=\"center\" >\r\n                            Weather\r\n                        </Typography>\r\n                        <CloudOutlinedIcon />\r\n                        <Switch color=\"primary\" checked={dark} onChange={()=>setDark(!dark)}></Switch>\r\n                    </Toolbar>\r\n                    </Grid>\r\n                    \r\n                </Grid>\r\n                \r\n            </AppBar>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Nav\r\n","import React, { useState } from 'react'\r\nimport './style.css'\r\nimport { Button, TextField, Grid,Paper, Typography } from '@material-ui/core'\r\nimport Nav from './Nav'\r\nimport { ThemeProvider,createTheme } from '@material-ui/core/styles';\r\n\r\n\r\n\r\nconst App = () => {\r\n    const [dark, setDark] = useState(false)\r\n    const theme = createTheme({\r\n        palette:{\r\n            type:dark?\"dark\":\"light\"\r\n        }\r\n    })\r\n\r\n\r\n    const [value, setValue] = useState('')\r\n    const [disdata, setData] = useState({})\r\n    \r\n    const getValues = async () => {\r\n        const response = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${value}&appid=7c7c180a9582489ed9b78155e63b8d28&units=metric`)\r\n        if (response.status === 200) {\r\n            const data = await response.json()\r\n            // setData(data.main.temp)\r\n            setData({\r\n                temp: data.main.temp,\r\n                min: data.main.temp_min,\r\n                max: data.main.temp_max,\r\n                hum: data.main.humidity\r\n\r\n            })\r\n\r\n        } else {\r\n            setData(\"No results\")\r\n        }\r\n    }\r\n    // const theme = () => {\r\n    //     setDark(!dark)\r\n    // }\r\n\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <Paper>\r\n            <Grid className=\"con\" container>\r\n                <Grid className=\"item\" item xs={12} >\r\n                    <Nav dark={dark} setDark={setDark}/>\r\n                </Grid>\r\n                <Grid className=\"item\" item xs={0} sm={3} />\r\n                <Grid className=\"item2\"  item xs={12} sm={6}>\r\n                <Paper className=\"pap\" elevation={3}>\r\n                        <div className=\"paper\">\r\n                        <TextField variant=\"outlined\" label=\"Enter city name\" value={value} onChange={(e) => setValue(e.target.value)}></TextField>\r\n                        <Typography variant=\"h4\" align=\"center\">{value}</Typography>\r\n                        <Button variant=\"contained\" style={{ margin: \"10px\" }} color=\"primary\" onClick={getValues}>Get</Button>\r\n                        {/* <Button variant=\"contained\" style={{ margin: \"10px\" }} onClick={theme} color=\"secondary\">{dark ? \"Light Mode\" : \"Dark Mode\"}</Button> */}\r\n                        </div>\r\n                        <Grid container spacing={2}>\r\n                        <Grid item xs={2}/>\r\n                        <Grid item xs={8}>\r\n                        <Paper className=\"temp\">\r\n                            <Typography variant=\"h5\" align=\"center\">\r\n                                {disdata.temp ? `Temp: ${disdata.temp} °C` : 'No results'}\r\n                            </Typography>\r\n                        \r\n                        </Paper>\r\n                        </Grid>\r\n                        \r\n                        <Grid item xs={2}/>\r\n                        <Grid item xs={1}/>\r\n                        <Grid item xs={5}>\r\n                        {disdata.temp && \r\n                        <Paper className=\"minmax\">\r\n                        <Typography variant=\"h6\" align=\"center\">\r\n                            Min:\r\n                        </Typography>\r\n                        <Typography variant=\"h5\" align=\"center\">\r\n                            {`${disdata.min} °C`}\r\n                        </Typography>\r\n                        </Paper>}\r\n                        </Grid>\r\n                        <Grid item xs={5}>\r\n                            {disdata.temp &&\r\n                        <Paper className=\"minmax\">\r\n                        <Typography variant=\"h5\" align=\"center\">\r\n                        Max:\r\n                        </Typography>\r\n                        <Typography variant=\"h5\" align=\"center\">\r\n                            {`${disdata.max} °C`}\r\n                        </Typography>\r\n                        </Paper>}\r\n                        </Grid>\r\n                        <Grid item xs={1}/>\r\n                        <Grid item xs={1}/>\r\n                        <Grid item xs={10}>\r\n                        {disdata.temp &&\r\n                        <Paper className=\"temp\">\r\n                        <Typography variant=\"h5\" align=\"center\">\r\n                            {`Humidity: ${disdata.hum}%`}\r\n                        </Typography>\r\n                        \r\n                        </Paper>}\r\n                        </Grid>\r\n                        </Grid>\r\n                    \r\n                    </Paper>\r\n                </Grid>\r\n                <Grid className=\"item\" item xs={0} sm={3} />\r\n            </Grid>\r\n            </Paper>\r\n        </ThemeProvider>\r\n    )\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}